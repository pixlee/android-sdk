plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    testOptions {
//        unitTests.returnDefaultValues = true
        testOptions {
            unitTests.all {
                // All the usual Gradle options.
                testLogging {
                    events "passed", "skipped", "failed", "standardOut", "standardError"
                    outputs.upToDateWhen {false}
                    showStandardStreams = true
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    implementation 'androidx.core:core-ktx:1.7.0'

    /**
     * testing
     */
    testImplementation "junit:junit:$junit"
    testImplementation 'org.json:json:20200518'
    androidTestImplementation "com.fasterxml.jackson.core:jackson-databind:$jackson"
    androidTestImplementation 'androidx.test.ext:junit-ktx:' + rootProject.extJUnitVersion
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:' + rootProject.espressoVersion
    androidTestImplementation "com.jakewharton.espresso:okhttp3-idling-resource:$jakeWhartonOkhttpOdlingResource"

    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson"

    implementation "androidx.appcompat:appcompat:$androidxAppcompat"
    implementation "com.google.android.material:material:$material"
    /**
     * Network
     */
    implementation "com.squareup.retrofit2:retrofit:$retrofit2"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit2"
    implementation 'com.serjltt.moshi:moshi-lazy-adapters:2.2'

    implementation "com.squareup.okhttp3:okhttp:$okhttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"

    /**
     * Json Logging
     */
    implementation "com.orhanobut:logger:$orhanobutLogger"

    /**
     * Glide(Image library)
     */
    implementation "com.github.bumptech.glide:glide:$glide"
    implementation "com.github.bumptech.glide:annotations:$glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    /**
     * Glide Transformation
     */
    implementation 'jp.wasabeef:glide-transformations:4.3.0'

    /**
     * Lottie for animation
     */
    implementation "com.airbnb.android:lottie:$lottie"

    implementation "androidx.constraintlayout:constraintlayout:$androidxConstraint"

    compileOnly "org.checkerframework:checker-qual:$checkerframeworkVersion"
    implementation "com.google.android.exoplayer:exoplayer-core:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-dash:$exoPlayer"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoPlayer"
    implementation "com.google.android.exoplayer:extension-ima:$exoPlayer"
    implementation "com.google.android.exoplayer:extension-cronet:$exoPlayer"

    implementation 'androidx.annotation:annotation:1.3.0'
}
